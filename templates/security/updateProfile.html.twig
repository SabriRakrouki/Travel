{% extends 'baseFront.html.twig' %}

{% block title %} new tourist {% endblock %}
{% block search %}
{% endblock %}
{% block change %}

    <style>

        .containerr {
            max-width: 38em;
            margin-bottom: 50px;
            margin-top: 50px;
            padding: 1em 3em 2em 3em;
            margin: 0em auto;
            background-color: #fff;

            height: 700px;
            border-radius: 4.2px;
            box-shadow: 0px 3px 10px -2px rgba(0, 0, 0, 0.2);
        }
        .buttonn {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            cursor: pointer;
            width: 100%;
            opacity: 0.9;
        }

        .wrapper{
            max-width: 450px;
            margin-top: 20px;
        }

        .wrapper .search-input{
            background: #fff;
            width: 480px;
            border-radius: 5px;
            position: relative;
        }

        .search-input .autocom-box{
            padding: 0;
            opacity: 0;
            pointer-events: none;
            max-height: 280px;
            overflow-y: auto;
        }

        .search-input.active .autocom-box{
            padding: 10px 8px;
            opacity: 1;
            pointer-events: auto;
        }

        .autocom-box li{
            list-style: none;
            padding: 8px 12px;
            display: none;
            width: 100%;
            cursor: default;

        }

        .search-input.active .autocom-box li{
            display: block;
        }
        .autocom-box li:hover{
            background: #efefef;
        }

        .search-input .icon{
            position: absolute;
            right: 0px;
            top: 0px;
            height: 55px;
            width: 55px;
            text-align: center;
            line-height: 55px;
            font-size: 20px;
            color: #644bff;
            cursor: pointer;
        }


        input,
        input[type="radio"] + label,
        input[type="checkbox"] + label:before,
        select option,
        select {
            width: 100%;
            padding: 1em;
            line-height: 1.4;
            background-color: #f9f9f9;
            border: 1px solid #e5e5e5;
            border-radius: 3px;
            -webkit-transition: 0.35s ease-in-out;
            -moz-transition: 0.35s ease-in-out;
            -o-transition: 0.35s ease-in-out;
            transition: 0.35s ease-in-out;
            transition: all 0.35s ease-in-out;
        }
        input:focus {
            outline: 0;
            border-color: #64ac15;
        }
        input:focus + .input-icon i {
            color: #7ed321;
        }
        input:focus + .input-icon:after {
            border-right-color: #7ed321;
        }
        input[type="radio"] {
            display: none;
        }
        input[type="radio"] + label,
        select {
            display: inline-block;
            width: 50%;
            text-align: center;
            float: left;
            border-radius: 0;
        }
        input[type="radio"] + label:first-of-type {
            border-top-left-radius: 3px;
            border-bottom-left-radius: 3px;
        }
        input[type="radio"] + label:last-of-type {
            border-top-right-radius: 3px;
            border-bottom-right-radius: 3px;
        }
        input[type="radio"] + label i {
            padding-right: 0.4em;
        }
        input[type="radio"]:checked + label,
        input:checked + label:before,
        select:focus,
        select:active {
            background-color: #7ed321;
            color: #fff;
            border-color: #64ac15;
        }
        input[type="checkbox"] {
            display: none;
        }
        input[type="checkbox"] + label {
            position: relative;
            display: block;
            padding-left: 1.6em;
        }
        input[type="checkbox"] + label:before {
            position: absolute;
            top: 0.2em;
            left: 0;
            display: block;
            width: 1em;
            height: 1em;
            padding: 0;
            content: "";
        }
        input[type="checkbox"] + label:after {
            position: absolute;
            top: 0.45em;
            left: 0.2em;
            font-size: 0.8em;
            color: #fff;
            opacity: 0;
            font-family: FontAwesome;
            content: "\f00c";
        }
        input:checked + label:after {
            opacity: 1;
        }


        .roww {
            margin-top: 30px;
            zoom: 1;
            margin-left: 10px;


        }
        .roww:before,
        .roww:after {
            content: "";
            display: table;
        }
        .roww:after {
            clear: both;
        }


        .col-half {
            padding-right: 10px;
            float: left;
            width: 50%;
        }
        .col-half:last-of-type {
            padding-right: 0;
        }
        .col-third {
            padding-right: 10px;
            float: left;
            width: 33.33333333%;
        }
        .col-third:last-of-type {
            padding-right: 0;
        }
        select {
            height: 3.4em;
            line-height: 2;
        }
        select:first-of-type {
            border-top-left-radius: 3px;
            border-bottom-left-radius: 3px;
        }
        select:last-of-type {
            border-top-right-radius: 3px;
            border-bottom-right-radius: 3px;
        }
        select:focus,
        select:active {
            outline: 0;
        }
        select option {
            background-color: #7ed321;
            color: #fff;
        }

        .input-group {
            margin-bottom: 1em;
            zoom: 1;
            width: 430px;

        }


        .input-group-icon {
            position: relative;
        }
        .input-group-icon input {
            padding-left: 4.4em;
        }
        .input-group-icon .input-icon {
            position: absolute;
            top: 0;
            left: 0;
            width: 3.4em;
            height: 3.4em;
            line-height: 3.4em;
            text-align: center;
            pointer-events: none;
        }
        .input-group-icon .input-icon:after {
            position: absolute;
            top: 0.6em;
            bottom: 0.6em;
            left: 3.4em;
            display: block;
            border-right: 1px solid #e5e5e5;
            content: "";
            -webkit-transition: 0.35s ease-in-out;
            -moz-transition: 0.35s ease-in-out;
            -o-transition: 0.35s ease-in-out;
            transition: 0.35s ease-in-out;
            transition: all 0.35s ease-in-out;
        }
        .input-group-icon .input-icon i {
            -webkit-transition: 0.35s ease-in-out;
            -moz-transition: 0.35s ease-in-out;
            -o-transition: 0.35s ease-in-out;
            transition: 0.35s ease-in-out;
            transition: all 0.35s ease-in-out;
        }

    </style>


    <div class="contact_form_section" style="background-color: #e3e3e3 ; margin-top: -30px">
        <div class="container">
            <div class="roww">
                <div class="col" style="margin-top: 50px ; margin-bottom: 50px">
                    <div class="containerr">
                        <div class="roww">
                            <h5 style="color: #1d3a4b ;">Update Profile</h5>
                            {{ form_start(form) }}
                            <div class="input-group input-group-icon">
                                {{ form_widget(form.nom , {'attr': { 'placeholder' : 'First Name'}} ) }}
                                <div class="input-icon"><i class="fa fa-user"></i></div>
                            </div>
                            {{ form_errors(form.nom) }}
                            <div class="input-group input-group-icon">
                                {{ form_widget(form.prenom , {'attr': { 'placeholder' : 'Last Name'}} ) }}
                                <div class="input-icon"><i class="fa fa-user"></i></div>
                            </div>
                            {{ form_errors(form.prenom) }}
                            <div class="input-group input-group-icon">
                                {{ form_widget(form.email , {'attr': { 'placeholder' : 'Email'}} ) }}
                                <div class="input-icon"><i class="fa fa-envelope"></i></div>
                            </div>
                            {{ form_errors(form.email) }}
                            <div class="input-group input-group-icon">
                                {{ form_widget(form.password , {'attr': { 'placeholder' : 'Password'}} ) }}
                                <div class="input-icon"><i class="fa fa-key"></i></div>
                            </div>
                            {{ form_errors(form.password) }}
                            <div class="input-group input-group-icon">
                                {{ form_widget(form.age , {'attr': { 'placeholder' : 'age'}} ) }}
                                <div class="input-icon"><i class="fa fa-child"></i></div>
                            </div>
                            {{ form_errors(form.age) }}
                            <div class="input-group input-group-icon">
                                {{ form_widget(form.numero , {'attr': { 'placeholder' : 'numero'}} ) }}
                                <div class="input-icon"><i class="fa fa-phone"></i></div>
                            </div>
                            {{ form_errors(form.numero) }}
                            <div class="input-group input-group-icon">
                                {{ form_widget(form.cin , {'attr': { 'placeholder' : 'cin'}} ) }}
                                <div class="input-icon"><i class="fa fa-book"></i></div>
                            </div>
                            {{ form_errors(form.cin) }}

                            <div class="wrapper">
                                <div class="search-input" style="width: 430px">
                                    <a href="" target="_blank" hidden></a>
                                    {{ form_widget(form.country , {'attr': { 'placeholder' : 'Country'}} ) }}
                                    <div class="autocom-box">
                                        <!-- here list are inserted from javascript -->
                                    </div>
                                    <div class="icon"><i class="fas fa-search"></i></div>
                                </div>
                            </div>

                            {{ form_widget(form.update , {'attr': { 'placeholder' : 'Country' ,'class' :'buttonn '}} ) }}
                            {{ form_end(form) }}

                        </div>


                    </div>



                </div>
                <!-- partial -->
                <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>

            </div>
        </div>

        <script>
            let  suggestions = []
            async function getUsers() {
                let response = await fetch(
                    "https://restcountries.eu/rest/v2/all"
                );
                let data = await response.json();
                return data;
            }
            getUsers().then(data =>
                data.forEach(country => suggestions.push(country['name']))
            );

            // getting all required elements
            const searchWrapper = document.querySelector(".search-input");
            const inputBox = searchWrapper.querySelector("input");
            const suggBox = searchWrapper.querySelector(".autocom-box");
            const icon = searchWrapper.querySelector(".icon");
            let linkTag = searchWrapper.querySelector("a");
            let webLink;

            // if user press any key and release
            inputBox.onkeyup = (e)=>{
                let userData = e.target.value; //user enetered data
                let emptyArray = [];
                if(userData){

                    emptyArray = suggestions.filter((data)=>{
                        //filtering array value and user characters to lowercase and return only those words which are start with user enetered chars
                        return data.toLocaleLowerCase().startsWith(userData.toLocaleLowerCase());
                    });
                    emptyArray = emptyArray.map((data)=>{
                        // passing return data inside li tag
                        return data = '<li>'+ data +'</li>';
                    });
                    searchWrapper.classList.add("active"); //show autocomplete box
                    showSuggestions(emptyArray);
                    let allList = suggBox.querySelectorAll("li");
                    for (let i = 0; i < allList.length; i++) {
                        //adding onclick attribute in all li tag
                        allList[i].setAttribute("onclick", "select(this)");
                    }
                }else{
                    searchWrapper.classList.remove("active"); //hide autocomplete box
                }
            }

            function select(element){
                let selectData = element.textContent;
                inputBox.value = selectData;
                searchWrapper.classList.remove("active");
            }

            function showSuggestions(list){
                let listData;
                if(!list.length){
                    userValue = inputBox.value;
                    listData = '<li>'+ userValue +'</li>';
                }else{
                    listData = list.join('');
                }
                suggBox.innerHTML = listData;
            }

        </script>
    </div>

{% endblock %}




